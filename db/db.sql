-- MySQL Script generated by MySQL Workbench
-- Sun 16 Oct 2022 05:12:39 PM -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tartas_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tartas_db` ;

-- -----------------------------------------------------
-- Schema tartas_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tartas_db` ;
USE `tartas_db` ;

-- -----------------------------------------------------
-- Table `tartas_db`.`tipoDocumento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`tipoDocumento` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`tipoDocumento` (
  `idtipoDocumento` INT NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idtipoDocumento`),
  UNIQUE INDEX `tipo_UNIQUE` (`tipo` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`grupos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`grupos` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`grupos` (
  `idgrupos` INT NOT NULL AUTO_INCREMENT,
  `saldo` INT NULL DEFAULT 0,
  `fecha_alta` DATE NULL,
  `nombre_grupo` VARCHAR(45) NULL,
  PRIMARY KEY (`idgrupos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`clientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`clientes` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`clientes` (
  `idclientes` INT NOT NULL AUTO_INCREMENT,
  `nombre_cliente` VARCHAR(45) NULL,
  `apellido_cliente` VARCHAR(45) NULL,
  `direccion_cliente` VARCHAR(45) NULL,
  `telefono` VARCHAR(45) NULL,
  `tipoDocumento_idtipoDocumento` INT NOT NULL,
  `documento` VARCHAR(45) NOT NULL,
  `grupos_idgrupos` INT NULL,
  `email_cliente` VARCHAR(45) NULL,
  PRIMARY KEY (`idclientes`),
  INDEX `fk_clientes_tipoDocumento_idx` (`tipoDocumento_idtipoDocumento` ASC) VISIBLE,
  INDEX `fk_clientes_grupos1_idx` (`grupos_idgrupos` ASC) VISIBLE,
  UNIQUE INDEX `email_cliente_UNIQUE` (`email_cliente` ASC) VISIBLE,
  CONSTRAINT `fk_clientes_tipoDocumento`
    FOREIGN KEY (`tipoDocumento_idtipoDocumento`)
    REFERENCES `tartas_db`.`tipoDocumento` (`idtipoDocumento`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_clientes_grupos1`
    FOREIGN KEY (`grupos_idgrupos`)
    REFERENCES `tartas_db`.`grupos` (`idgrupos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1
PACK_KEYS = DEFAULT;


-- -----------------------------------------------------
-- Table `tartas_db`.`empleados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`empleados` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`empleados` (
  `idempleados` INT NOT NULL AUTO_INCREMENT,
  `nombre_empleado` VARCHAR(45) NOT NULL,
  `apellido_empleado` VARCHAR(45) NOT NULL,
  `documento_empleado` VARCHAR(45) NOT NULL,
  `direccion_empleado` VARCHAR(45) NULL,
  `fecha_ingreso` DATE NULL,
  `tipoDocumento_idtipoDocumento` INT NOT NULL,
  PRIMARY KEY (`idempleados`),
  INDEX `fk_empleados_tipoDocumento1_idx` (`tipoDocumento_idtipoDocumento` ASC) VISIBLE,
  UNIQUE INDEX `documento_empleado_UNIQUE` (`documento_empleado` ASC) VISIBLE,
  CONSTRAINT `fk_empleados_tipoDocumento1`
    FOREIGN KEY (`tipoDocumento_idtipoDocumento`)
    REFERENCES `tartas_db`.`tipoDocumento` (`idtipoDocumento`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`productos` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`productos` (
  `idproductos` INT NOT NULL AUTO_INCREMENT,
  `nombre_producto` VARCHAR(45) NOT NULL,
  `precio` INT NULL,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`idproductos`),
  UNIQUE INDEX `nombre_producto_UNIQUE` (`nombre_producto` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`estado_articulo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`estado_articulo` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`estado_articulo` (
  `idestado_articulo` INT NOT NULL AUTO_INCREMENT,
  `nombreestado_articulo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idestado_articulo`),
  UNIQUE INDEX `nombreestado_articulo_UNIQUE` (`nombreestado_articulo` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`articulos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`articulos` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`articulos` (
  `idarticulos` INT NOT NULL AUTO_INCREMENT,
  `fabricacion` DATE NULL,
  `venta` DATE NULL,
  `productos_idproductos` INT NOT NULL,
  `estado_articulo_idestado_articulo` INT NOT NULL,
  PRIMARY KEY (`idarticulos`),
  INDEX `fk_articulos_productos1_idx` (`productos_idproductos` ASC) VISIBLE,
  INDEX `fk_articulos_estado_articulo1_idx` (`estado_articulo_idestado_articulo` ASC) VISIBLE,
  CONSTRAINT `fk_articulos_productos1`
    FOREIGN KEY (`productos_idproductos`)
    REFERENCES `tartas_db`.`productos` (`idproductos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_articulos_estado_articulo1`
    FOREIGN KEY (`estado_articulo_idestado_articulo`)
    REFERENCES `tartas_db`.`estado_articulo` (`idestado_articulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`estado_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`estado_pedido` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`estado_pedido` (
  `idestado_pedido` INT NOT NULL AUTO_INCREMENT,
  `nombre_estado_pedido` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idestado_pedido`),
  UNIQUE INDEX `nombre_estado_pedido_UNIQUE` (`nombre_estado_pedido` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`pedidos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`pedidos` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`pedidos` (
  `idpedidos` INT NOT NULL AUTO_INCREMENT,
  `fecha_entregado` DATE NULL,
  `estado_pedido_idestado_pedido` INT NOT NULL,
  PRIMARY KEY (`idpedidos`),
  INDEX `fk_pedidos_estado_pedido1_idx` (`estado_pedido_idestado_pedido` ASC) VISIBLE,
  CONSTRAINT `fk_pedidos_estado_pedido1`
    FOREIGN KEY (`estado_pedido_idestado_pedido`)
    REFERENCES `tartas_db`.`estado_pedido` (`idestado_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`ventas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`ventas` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`ventas` (
  `idventas` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NOT NULL,
  `clientes_idclientes` INT NOT NULL,
  `empleados_idempleados` INT NOT NULL,
  `articulos_idarticulos` INT NOT NULL,
  `cantidad` INT NOT NULL DEFAULT 1,
  `importe` INT NOT NULL DEFAULT 0,
  `pedidos_idpedidos` INT NOT NULL,
  PRIMARY KEY (`idventas`),
  INDEX `fk_ventas_clientes1_idx` (`clientes_idclientes` ASC) VISIBLE,
  INDEX `fk_ventas_empleados1_idx` (`empleados_idempleados` ASC) VISIBLE,
  INDEX `fk_ventas_articulos1_idx` (`articulos_idarticulos` ASC) VISIBLE,
  INDEX `fk_ventas_pedidos1_idx` (`pedidos_idpedidos` ASC) VISIBLE,
  UNIQUE INDEX `articulos_idarticulos_UNIQUE` (`articulos_idarticulos` ASC) VISIBLE,
  CONSTRAINT `fk_ventas_clientes1`
    FOREIGN KEY (`clientes_idclientes`)
    REFERENCES `tartas_db`.`clientes` (`idclientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ventas_empleados1`
    FOREIGN KEY (`empleados_idempleados`)
    REFERENCES `tartas_db`.`empleados` (`idempleados`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ventas_articulos1`
    FOREIGN KEY (`articulos_idarticulos`)
    REFERENCES `tartas_db`.`articulos` (`idarticulos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ventas_pedidos1`
    FOREIGN KEY (`pedidos_idpedidos`)
    REFERENCES `tartas_db`.`pedidos` (`idpedidos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`ingredientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`ingredientes` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`ingredientes` (
  `idingredientes` INT NOT NULL AUTO_INCREMENT,
  `nombre_ingrediente` VARCHAR(45) NOT NULL,
  `stock` INT NULL,
  PRIMARY KEY (`idingredientes`),
  UNIQUE INDEX `nombre_ingrediente_UNIQUE` (`nombre_ingrediente` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`ingredientes_has_productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`ingredientes_has_productos` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`ingredientes_has_productos` (
  `ingredientes_idingredientes` INT NOT NULL AUTO_INCREMENT,
  `productos_idproductos` INT NOT NULL,
  `unidad` VARCHAR(10) NOT NULL,
  `cantidad` INT NOT NULL,
  PRIMARY KEY (`ingredientes_idingredientes`, `productos_idproductos`),
  INDEX `fk_ingredientes_has_productos_productos1_idx` (`productos_idproductos` ASC) VISIBLE,
  INDEX `fk_ingredientes_has_productos_ingredientes1_idx` (`ingredientes_idingredientes` ASC) VISIBLE,
  CONSTRAINT `fk_ingredientes_has_productos_ingredientes1`
    FOREIGN KEY (`ingredientes_idingredientes`)
    REFERENCES `tartas_db`.`ingredientes` (`idingredientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ingredientes_has_productos_productos1`
    FOREIGN KEY (`productos_idproductos`)
    REFERENCES `tartas_db`.`productos` (`idproductos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`insumos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`insumos` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`insumos` (
  `idinsumos` INT NOT NULL AUTO_INCREMENT,
  `presentacion` VARCHAR(45) NULL,
  `contenido` INT NULL,
  `ingredientes_idingredientes` INT NOT NULL,
  `codigo` INT NULL,
  PRIMARY KEY (`idinsumos`),
  INDEX `fk_insumos_ingredientes1_idx` (`ingredientes_idingredientes` ASC) VISIBLE,
  CONSTRAINT `fk_insumos_ingredientes1`
    FOREIGN KEY (`ingredientes_idingredientes`)
    REFERENCES `tartas_db`.`ingredientes` (`idingredientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`proveedores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`proveedores` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`proveedores` (
  `idproveedores` INT NOT NULL AUTO_INCREMENT,
  `nombre_proveedor` VARCHAR(45) NOT NULL,
  `razon_social` VARCHAR(45) NOT NULL,
  `direccion_proveedor` VARCHAR(45) NULL,
  `documento_proveedor` VARCHAR(45) NULL,
  `tipoDocumento_idtipoDocumento` INT NOT NULL,
  `telefono_proveedor` VARCHAR(45) NULL,
  PRIMARY KEY (`idproveedores`),
  INDEX `fk_proveedores_tipoDocumento1_idx` (`tipoDocumento_idtipoDocumento` ASC) VISIBLE,
  UNIQUE INDEX `nombre_proveedor_UNIQUE` (`nombre_proveedor` ASC) VISIBLE,
  UNIQUE INDEX `razon_social_UNIQUE` (`razon_social` ASC) VISIBLE,
  UNIQUE INDEX `documento_proveedor_UNIQUE` (`documento_proveedor` ASC) VISIBLE,
  CONSTRAINT `fk_proveedores_tipoDocumento1`
    FOREIGN KEY (`tipoDocumento_idtipoDocumento`)
    REFERENCES `tartas_db`.`tipoDocumento` (`idtipoDocumento`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tartas_db`.`proveedores_has_insumos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tartas_db`.`proveedores_has_insumos` ;

CREATE TABLE IF NOT EXISTS `tartas_db`.`proveedores_has_insumos` (
  `proveedores_idproveedores` INT NOT NULL AUTO_INCREMENT,
  `insumos_idinsumos` INT NOT NULL,
  `precio` INT NOT NULL,
  `fecha_precio` DATE NOT NULL,
  PRIMARY KEY (`proveedores_idproveedores`, `insumos_idinsumos`),
  INDEX `fk_proveedores_has_insumos_insumos1_idx` (`insumos_idinsumos` ASC) VISIBLE,
  INDEX `fk_proveedores_has_insumos_proveedores1_idx` (`proveedores_idproveedores` ASC) VISIBLE,
  CONSTRAINT `fk_proveedores_has_insumos_proveedores1`
    FOREIGN KEY (`proveedores_idproveedores`)
    REFERENCES `tartas_db`.`proveedores` (`idproveedores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_proveedores_has_insumos_insumos1`
    FOREIGN KEY (`insumos_idinsumos`)
    REFERENCES `tartas_db`.`insumos` (`idinsumos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

/* Comienza la carga de tablas*/

use tartas_db;

insert into tipoDocumento ( tipo) values 
( 'Cédula de Identidad'),
( 'Pasaporte'),
( 'RUT');

insert into grupos (nombre_grupo, fecha_alta ) values 
( 'Familia_1', DATE (sysdate())), 
( 'Familia_2', DATE (sysdate())),
( 'Familia_3', DATE (sysdate()));

insert into estado_articulo (nombreestado_articulo ) values 
( 'En stock'),
( 'En proceso'),
( 'Agregado a pedido');

insert into estado_pedido (nombre_estado_pedido ) values 
( 'Entregado'),
( 'En proceso'),
( 'En viaje');

insert into productos (nombre_producto, precio, descripcion) values 
('Cajita contenta', 300, 'Toda la alegría en una caja'),
( 'Tarta infernal', 400, 'Toda la alegría en una tarta'),
( 'Burgui contenta', 500, 'Toda la alegría en una burgui'),
( 'Milangasa', 600, 'Toda la alegría en una milanesa');

insert into proveedores (
nombre_proveedor, 
razon_social, 
documento_proveedor, 
telefono_proveedor, 
tipoDocumento_idtipoDocumento ) 
values ( 
'Distribuidora El Amanecer', 
'DELOKOS', 
876341830700, 
'445273819', 
1
);
insert into proveedores (
nombre_proveedor, 
razon_social, 
documento_proveedor, 
telefono_proveedor, 
tipoDocumento_idtipoDocumento ) 
values ( 
'Mayorista La Esperanza', 
'MIKONOIS Srl.', 
899341830700, 
'445273529', 
1
);

insert into empleados (nombre_empleado, apellido_empleado, documento_empleado, fecha_ingreso, tipoDocumento_idtipoDocumento)
	values 
    ('Primero', 'First', '3-888444-6', date(sysdate()), 1),
    ('Segundo', 'Second', '3-222333-8', date(sysdate()), 1),
    ('Tercero', 'Third', '995557477-0', date(sysdate()), 2);

insert into clientes (nombre_cliente, apellido_cliente, tipoDocumento_idtipoDocumento, documento, grupos_idgrupos)
	values 
    ('NombreCliente1', 'ApellidoCliente1', 1, '4.213455-7', null),
    ('NombreCliente2', 'ApellidoCliente2', 1, '4.213455-7', 1),
    ('NombreCliente3', 'ApellidoCliente3', 2, '22223333', 2);
    
insert into ingredientes (nombre_ingrediente, stock)
	values 
    ('harina 000', 33),
    ('aceitunas descarozadas', 33),
    ('relleno_puerro', 33);
    

insert into 
ingredientes_has_productos 
(ingredientes_idingredientes, productos_idproductos, unidad, cantidad)
values 
(1, 2, 'kilo', 21),
(2, 4, 'kilo', 8),
(3, 2, 'taza', 22);

insert into articulos
(fabricacion, venta, productos_idproductos, estado_articulo_idestado_articulo)
values
('2022-10-12', null, 1, 1),
('2022-10-13', null, 2, 1),
('2022-10-10', '2022-10-13', 3, 3),
('2022-10-11', '2022-10-12', 2, 2),
('2022-10-12', null, 2, 3);

insert into insumos
(presentacion, contenido, ingredientes_idingredientes, codigo)
values
('kilos', 3, 1, 34525),
('litros',3,3,3455),
('litros',5,2,3445),
('litros',3,2,3440),
('kilos',2,2,4031),
('kilos',1,2,4033),
('kilos',1,1,4037);

insert into pedidos 
(fecha_entregado, estado_pedido_idestado_pedido)
values
(null, 2),
('2022-10-14',1),
(null, 3),
('2022-10-15',2);

insert into proveedores_has_insumos
(proveedores_idproveedores, insumos_idinsumos, precio, fecha_precio)
values
(1, 1, 321, '2022-10-05'),
(2, 1, 311, '2022-09-12'),
(2, 2, 21, '2022-10-12');

insert into ventas
(fecha, clientes_idclientes, empleados_idempleados, articulos_idarticulos, cantidad, importe, pedidos_idpedidos)
values
('2022-10-11', 1, 3, 1, 2, 880, 1),
('2022-10-12', 1, 1, 2, 3, 1243, 1),
('2022-10-03', 2, 1, 3, 2, 680, 2),
('2022-09-12', 3, 2, 4, 2, 325, 3);


/* Comienza la creación de vistas*/

create view clientes_grupos as
select clientes.nombre_cliente nombre, clientes.apellido_cliente apellido, grupos.nombre_grupo grupos
from clientes, grupos
where grupos.idgrupos = clientes.grupos_idgrupos;

create view insumos_proveedores as
select distinct
I.nombre_ingrediente ingrediente, 
INS.presentacion presentacion, 
INS.contenido contenido, 
proveedores_has_insumos.precio precio,
proveedores_has_insumos.fecha_precio fecha,
P.nombre_proveedor proveedor
from ingredientes I, insumos INS, proveedores_has_insumos, proveedores P
where
(I.idingredientes = INS.ingredientes_idingredientes and 
INS.idinsumos = proveedores_has_insumos.insumos_idinsumos and 
proveedores_has_insumos.proveedores_idproveedores = P.idproveedores)
;

create view producto_ingrediente as
select P.nombre_producto producto, I.nombre_ingrediente, IP.unidad, IP.cantidad
from productos P, ingredientes I, ingredientes_has_productos IP
where
(P.idproductos = IP.productos_idproductos and 
IP.ingredientes_idingredientes = I.idingredientes)
;

create or replace view clientes_ventas as
select C.nombre_cliente nombre, C.apellido_cliente, P.nombre_producto producto, V.fecha fecha, V.cantidad, V.importe
from clientes C, productos P, ventas V, articulos A
where
(C.idclientes = V.clientes_idclientes and
A.idarticulos = V.articulos_idarticulos and
A.productos_idproductos = P.idproductos)
;

create or replace view pedidos_ventas as
select distinct PE.idpedidos Id_Pedido, 
PR.nombre_producto Producto, 
V.cantidad Cantidad, 
V.fecha Fecha_Venta, 
PE.fecha_entregado Fecha_Entregado
from productos PR inner join articulos AR 
on 
PR.idproductos = AR.productos_idproductos, 
pedidos PE inner join ventas V
on
PE.idpedidos = V.pedidos_idpedidos 
where 
(V.articulos_idarticulos = AR.idarticulos)
order by PE.idpedidos
;
DELIMITER //
CREATE FUNCTION calcular_ganancia(venta INT, costo INT)
RETURNS INT
DETERMINISTIC
BEGIN
	DECLARE ganancia INT;
    SET ganancia = (venta - costo);
	RETURN ganancia;
END
//

DELIMITER ;
DELIMITER $$
CREATE FUNCTION costo (id_producto INT)
RETURNS integer
READS SQL DATA
BEGIN
	DECLARE costo integer;
    SET costo = (
    SELECT sum(PI.precio*IP.cantidad/INS.contenido) 
		from proveedores_has_insumos PI inner join insumos INS inner join ingredientes ING 
        on (PI.insumos_idinsumos = INS.idinsumos and INS.ingredientes_idingredientes = ING.idingredientes),
        ingredientes_has_productos IP 
       
        
        WHERE (IP.productos_idproductos = id_producto)
        )
     ;
	RETURN costo;
END$$

DELIMITER ;